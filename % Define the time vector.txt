% Define the time vector
t = -10:0.01:10; % Time from -10 to 10 with increments of 0.01
%% Problem 1: X(t) = (e^t) + (e^-t) + sin(2t)
% Define the original signal X(t)
X1 = exp(t) + exp(-t) + sin(2*t);

% Calculate the even component X_e(t)
X1_even = (X1 + exp(-t) + exp(t) - sin(2*t)) / 2;

% Calculate the odd component X_o(t)
X1_odd = (X1 - (exp(-t) + exp(t) - sin(2*t))) / 2;

% plotting the results for Problem 1
figure;

% plot original signal
subplot(3, 1, 1);
plot(t, X1, 'b', 'LineWidth', 1.5);
title('Problem 1: Original Signal X(t) = (e^t) + (e^{-t}) + sin(2t)');
xlabel('Time (t)');
ylabel('X(t)');
grid on;

% plot even component
subplot(3, 1, 2);
plot(t, X1_even, 'r', 'LineWidth', 1.5);
title('Even Component X_e(t)');
xlabel('Time (t)');
ylabel('X_e(t)');
grid on;

% plot odd component
subplot(3, 1, 3);
plot(t, X1_odd, 'g', 'LineWidth', 1.5);
title('Odd Component X_o(t)');
xlabel('Time (t)');
ylabel('X_o(t)');
grid on;

% Adjust layout
title('Signal Decomposition for Problem 1');

%% Problem 2: X(t) = 2t + (4t^2) + (6t^3) + (8t^4)
% Define the original signal X(t)
X2 = 2*t + 4*t.^2 + 6*t.^3 + 8*t.^4;

% Calculate the even component X_e(t)
X2_even = (X2 + 2*(-t) + 4*(-t).^2 + 6*(-t).^3 + 8*(-t).^4) / 2;

% Calculate the odd component X_o(t)
X2_odd = (X2 - (2*(-t) + 4*(-t).^2 + 6*(-t).^3 + 8*(-t).^4)) / 2;

% plotting the results for Problem 2
figure;

% plot original signal
subplot(3, 1, 1);
plot(t, X2, 'b', 'LineWidth', 1.5);
title('Problem 2: Original Signal X(t) = 2t + (4t^2) + (6t^3) + (8t^4)');
xlabel('Time (t)');
ylabel('X(t)');
grid on;

% plot even component
subplot(3, 1, 2);
plot(t, X2_even, 'r', 'LineWidth', 1.5);
title('Even Component X_e(t)');
xlabel('Time (t)');
ylabel('X_e(t)');
grid on;

% plot odd component
subplot(3, 1, 3);
plot(t, X2_odd, 'g', 'LineWidth', 1.5);
title('Odd Component X_o(t)');
xlabel('Time (t)');
ylabel('X_o(t)');
grid on;

% Adjust layout
title('Signal Decomposition for Problem 2');

%% Problem 3: x(t) = cos(3t) + (t^2) + t*sin(t)
% Define the original signal X(t)
X3 = cos(3*t) + t.^2 + t.*sin(t);

% Calculate the even component X_e(t)
X3_even = (X3 + cos(3*(-t)) + (-t).^2 + (-t).*sin(-t)) / 2;

% Calculate the odd component X_o(t)
X3_odd = (X3 - (cos(3*(-t)) + (-t).^2 - (t).*sin(t))) / 2;

% plotting the results for Problem 3
figure;

% plot original signal
subplot(3, 1, 1);
plot(t, X3, 'b', 'LineWidth', 1.5);
title('Problem 3: Original Signal x(t) = cos(3t) + (t^2) + t*sin(t)');
xlabel('Time (t)');
ylabel('x(t)');
grid on;

% plot even component
subplot(3, 1, 2);
plot(t, X3_even, 'r', 'LineWidth', 1.5);
title('Even Component x_e(t)');
xlabel('Time (t)');
ylabel('x_e(t)');
grid on;

% plot odd component
subplot(3, 1, 3);
plot(t, X3_odd, 'g', 'LineWidth', 1.5);
title('Odd Component x_o(t)');
xlabel('Time (t)');
ylabel('x_o(t)');
grid on;

% Adjust layout
title('Signal Decomposition for Problem 3');

